module.exports = {
	extends: [
		"next",
		"prettier",
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:@typescript-eslint/recommended-requiring-type-checking",
		"plugin:@typescript-eslint/strict",
		"plugin:import/recommended",
		"plugin:import/typescript",
	],
	ignorePatterns: ["index.js", ".eslintrc.js", "node_modules", "dist", "build", "public", "next.config.js", "*.config.js", "*.config.ts"],
	parser: "@typescript-eslint/parser",
	parserOptions: {
		babelOptions: {
			presets: [require.resolve("next/babel")],
		},
		ecmaFeatures: {
			jsx: true,
		},
		project: "./tsconfig.json",
	},
	plugins: ["@typescript-eslint"],
	rules: {
		"@next/next/no-html-link-for-pages": "off",

		// basic
		"@typescript-eslint/interface-name-prefix": "off",
		"@typescript-eslint/explicit-function-return-type": "off",
		"@typescript-eslint/no-explicit-any": "off",
		"@typescript-eslint/no-unused-vars": "error",
		"@typescript-eslint/no-unsafe-argument": "warn",
		"@typescript-eslint/no-unsafe-member-access": "warn",
		"@typescript-eslint/no-unsafe-call": "off",
		"@typescript-eslint/restrict-plus-operands": "off",
		"@typescript-eslint/no-misused-promises": "off",
		"@typescript-eslint/require-await": "warn",
		"no-console": "error",
		"no-await-in-loop": "error",
		"no-dupe-else-if": "error",
		"no-import-assign": "error",
		"no-setter-return": "error",
		"no-template-curly-in-string": "error",
		"require-atomic-updates": "error",
		"block-scoped-var": "error",
		complexity: "error",
		curly: "error",
		"dot-notation": "error",
		eqeqeq: "error",
		"max-classes-per-file": ["error", 1],
		"no-alert": "error",
		"no-caller": "error",
		"no-constructor-return": "error",
		"no-div-regex": "error",
		"no-else-return": "error",
		"no-empty-function": "error",
		"no-eq-null": "error",
		"no-eval": "error",
		"no-extra-bind": "error",
		"no-extra-label": "error",
		"no-useless-return": "error",
		"no-unused-expressions": ["error", { allowTernary: true }],
		radix: "error",
		"@typescript-eslint/explicit-module-boundary-types": "off",
		"no-use-before-define": "off",
		"@typescript-eslint/no-use-before-define": "error",
		"no-shadow": "off",
		"@typescript-eslint/no-shadow": "error",
		"@typescript-eslint/ban-types": "error",
		"import/no-cycle": "error",
		"import/no-named-as-default": "off",
		"import/no-unresolved": "error",
		"@typescript-eslint/no-unnecessary-condition": "error",
		"@typescript-eslint/no-unsafe-assignment": "warn",

		// react
		"react/prop-types": "off",
		"react-hooks/rules-of-hooks": "error",
		"react-hooks/exhaustive-deps": "error",
		"react/react-in-jsx-scope": "off",
		"react/display-name": "error",
		"react/require-optimization": "error",
		// "react/destructuring-assignment": ["error", "never"],
		"react/jsx-curly-brace-presence": ["error", { props: "never", children: "never", propElementValues: "always" }],
		"react/self-closing-comp": [
			"error",
			{
				component: true,
				html: true,
			},
		],
	},
	settings: {
		"import/parsers": {
			"@typescript-eslint/parser": [".ts", ".tsx"],
		},
		"import/resolver": {
			typescript: {
				alwaysTryTypes: true,
			},
			node: {
				extensions: [".js", ".jsx", ".ts", ".tsx"],
			},
		},
		react: {
			version: "detect",
		},
		next: {
			rootDir: ["."],
		},
	},
	globals: {
		css: true,
	},
	env: {
		browser: true,
		node: true,
		jest: true,
		es6: true,
	},
};
